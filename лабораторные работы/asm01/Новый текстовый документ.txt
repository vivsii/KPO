Программа на ассемблере – это модуль, включающий одну главную, или
основную, процедуру, с которой начинается выполнение.


.586 – эта директива выбирает поддерживаемый набор команд 
ассемблера, указывая модель процессора.

Модуль может содержать сегмент кода, сегменты данных и стека. 
Нужно указать модель памяти при помощи директивы .MODEL. 

Плоская модель памяти flat (flat memory model). Эта модель памяти 
используется в операционной системе Windows. Адресация любой ячейки
памяти будет определяться содержимым одного 32-битного регистра.

Определяет приложение, выполняющееся, в защищенном режиме с 
использованием линейной (несегментированной) модели памяти.

stdcall – используемое соглашение о вызовах процедур.

Подключение необходимых библиотек: kernel32.lib, которая
содержит функцию ExitProcess.

Объявление прототипа функции с использованием директивы
PROTO

(после символа «:» указывается тип параметра, параметры разделяются 
символом «,»).
Параметры WinAPI-функций 32-битные ( целые числа). 
Все WinAPI-функции созданы по соглашению stdcall.

Функция MessageBoxA вызывается из системной библиотеки Windows
user32.dll.
MessageBox – выводит на экран окно с сообщением и кнопкой
выхода.
Параметры функции: 
 дескриптор окна, в котором будет появляться окно-сообщение; 
 текст, который будет появляться в окне; 
 текст заголовка окна; 
 тип окна, в частности можно определить количество кнопок выхода.
В Windows для прикладной программы отводится один большой плоский 
сегмент.

Секции (сегменты):
.STACK – сегмент стека. Размер стека по умолчанию – 1 Мб.
.CONST – сегмент (или секция) констант.
.DATA – сегмент (или секция) данных.
.CODE – сегмент кода.
Директива EQU определяет константу (подобно #define в языке СИ).
STR1 и STR2 – символьные строки, должны заканчиваться 0 байтом.
HW – неициализированное двойное слово (4 байта = 32-бита).
main PROC – директива PROC определяет начало процедуры.
START – метка.
Директива OFFSET указатель начала строки.
CALL – вызов функции.
main ENDP – конец процедуры main.
END main – последняя инструкция программы, в ней указывается точка
входа в программу (определено как имя main).

В языке ассемблера существует 5 (пять) директив для определения данных:
 DB (define byte) – определяет переменную размером в 1 байт;
 DW (define word) – определяет переменную размеров в 2 байта (слово);
 DD (define double word) – определяет переменную размером в 4 байта 
(двойное слово);
 DQ (define quad word) – определяет переменную размером в 8 байт 
(учетверённое слово);
 DT (define ten bytes) – определяет переменную размером в 10 байт

Транслятор языка MASM позволяет упростить вызов функций при помощи 
INVOKE. Встроенный макрос INVOKE используется для вызова любых 
функций, прототип которой должен быть задан.
Порядок следования параметров должен точно соответствовать прототипу
функции.
